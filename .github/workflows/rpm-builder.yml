name: Build RPMs per Major Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    container:
      image: almalinux:9
      options: --user 0
    env:
      REPO: fastfetch-cli/fastfetch

    steps:
      # 1. Checkout this repo (to save builds)z
      - name: Checkout workflow repo
        uses: actions/checkout@v4

      # 2. Install tools
      - name: Install RPM build tools & jq
        run: |
          dnf install -y rpm-build make gcc git wget jq
          mkdir -p ~/rpmbuild/{BUILD,RPMS,SOURCES,SPECS,SRPMS}
          mkdir -p builds/built-binaries
          mkdir -p builds/built-binaries-signatures

      # 3. Get all tags from the public repo
      - name: Get repo tags
        run: |
          # using job-level REPO: $REPO
          echo "Fetching tags from https://github.com/${REPO}.git"
          mkdir -p source
          cd source
          git init
          git remote add origin https://github.com/${REPO}.git
          # fetch tags only (shallow) to speed up
          git fetch --tags --no-recurse-submodules --depth=1 origin
          git tag -l > ../all-tags.txt

      # 4. Filter major releases (example: v1.*, v2.*, etc.)
      - name: Filter major releases
        run: |
          mkdir major-tags
          cd ..
          awk -F. '{print $1}' all-tags.txt | sort -u > major-tags/major.txt

      # 5. Build RPMs for each major release
      - name: Build RPM per major release
        run: |
          # using job-level REPO: $REPO
          while read -r major; do
            echo "Building major release $major"
            mkdir -p builds/built-binaries/$major
            mkdir -p builds/built-binaries-signatures/$major

            # Get latest tag in this major (match prefix like v1. or 1.)
            latest_tag=$(grep "^${major}" all-tags.txt | sort -V | tail -n1 || true)
            if [ -z "$latest_tag" ]; then
              echo "No tags found for major $major; skipping"
              continue
            fi
            echo "Latest tag: $latest_tag"

            # Clone repo at that tag
            rm -rf source
            git clone --branch "$latest_tag" --depth 1 "https://github.com/${REPO}.git" source

            # Build RPM(s)
            cd source || exit 1
            shopt -s nullglob
            specs=( *.spec )
            if [ ${#specs[@]} -eq 0 ]; then
              echo "No .spec files found in repository at tag $latest_tag; skipping"
              cd ..
              continue
            fi
            for spec in "${specs[@]}"; do
              rpmbuild -bb "$spec" --define "_topdir $HOME/rpmbuild"
            done
            cd ..

            # Copy any built RPMs to major version folder (use find to avoid glob issues)
            mkdir -p builds/built-binaries/$major
            find "$HOME/rpmbuild/RPMS" -type f -name "*.rpm" -exec cp -v --parents '{}' builds/built-binaries/$major/ \; || true

            # Generate SHA256 checksums only if RPMs exist
            target_dir="builds/built-binaries/$major"
            sig_dir="builds/built-binaries-signatures/$major"
            mkdir -p "$sig_dir"
            if find "$target_dir" -maxdepth 2 -type f -name "*.rpm" | read; then
              (cd "$target_dir" && sha256sum $(find . -type f -name "*.rpm" | sed 's|^./||') ) > "$sig_dir/sha256sums.txt" || true
            else
              echo "No RPMs to checksum for $major" > "$sig_dir/sha256sums.txt"
            fi

          done < major-tags/major.txt

      # 6. Upload artifacts (optional)
      - name: Upload all RPMs
        uses: actions/upload-artifact@v4
        with:
          name: rpm-artifacts
          path: builds/built-binaries/**

      - name: Upload all signatures
        uses: actions/upload-artifact@v4
        with:
          name: rpm-signatures
          path: builds/built-binaries-signatures/**
